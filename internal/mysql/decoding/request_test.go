package decoding_test

import (
	"testing"

	"github.com/colinnewell/pcap2mysql-log/internal/mysql/decoding"
	"github.com/colinnewell/pcap2mysql-log/internal/types"
	"github.com/google/go-cmp/cmp"
)

func TestDecodeRequest(t *testing.T) {
	e := testEmitter{}
	r := decoding.RequestDecoder{Emit: &e}
	//nolint:misspell
	_, err := r.Write([]byte{
		0x46, 0x00, 0x00, 0x00, 0x03, 0x53, 0x45, 0x4c, // F....SEL
		0x45, 0x43, 0x54, 0x20, 0x69, 0x64, 0x2c, 0x20, // ECT id,
		0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, // password
		0x2c, 0x20, 0x75, 0x32, 0x66, 0x2c, 0x20, 0x74, // , u2f, t
		0x6f, 0x74, 0x70, 0x20, 0x46, 0x52, 0x4f, 0x4d, // otp FROM
		0x20, 0x75, 0x73, 0x65, 0x72, 0x73, 0x20, 0x57, //  users W
		0x48, 0x45, 0x52, 0x45, 0x20, 0x75, 0x73, 0x65, // HERE use
		0x72, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3d, 0x20, // rname =
		0x27, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, // 'usernam
		0x65, 0x27, // e'
	})
	if err != nil {
		t.Fatal(err)
	}

	expected := []interface{}{
		types.Request{
			Type:  "Query",
			Query: "SELECT id, password, u2f, totp FROM users WHERE username = 'username'",
		},
	}
	if diff := cmp.Diff(e.transmissions, expected); diff != "" {
		t.Fatalf("Split doesn't match (-got +expected):\n%s\n", diff)
	}
}
