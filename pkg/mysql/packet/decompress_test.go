package packet_test

import (
	"bytes"
	"io"
	"testing"

	"github.com/colinnewell/pcap2mysql-log/pkg/mysql/packet"
	"github.com/google/go-cmp/cmp"
)

func TestNoCompression(t *testing.T) {
	expected := []byte{
		0x09, 0x00, 0x00, 0x00, 0x03, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x20, 0x31, // -- 0xSE,LECT 1
	}

	input := []byte{
		0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, 0x53, 0x45, 0x4c, 0x45, // ............SELE
		0x43, 0x54, 0x20, 0x31, // 0xCT, 1
	}

	var b bytes.Buffer
	d := packet.MySQLPacketDecompressor{Receiver: &b}
	if _, err := d.Write(input); err != nil {
		t.Fatal(err)
	}

	if diff := cmp.Diff(b.Bytes(), expected); diff != "" {
		t.Fatalf("Decompressed version doesn't match (-got +expected):\n%s\n", diff)
	}
}

func TestOnePacketExample(t *testing.T) {
	expected := []byte{
		0x2e, 0x00, 0x00, 0x00, 0x03, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x22, 0x30, 0x31, 0x32, // .....select "012
		0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, // 3456789012345678
		0x39, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x31, 0x32, 0x33, 0x34, // 9012345678901234
		0x35, 0x22, // 5"
	}

	input := []byte{
		0x22, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x78, 0x9c, 0xd3, 0x63, 0x60, 0x60, 0x60, 0x2e, 0x4e, // "...2..x..c```.N
		0xcd, 0x49, 0x4d, 0x2e, 0x51, 0x50, 0x32, 0x30, 0x34, 0x32, 0x36, 0x31, 0x35, 0x33, 0xb7, 0xb0, // .IM.QP20426153..
		0xc4, 0xcd, 0x52, 0x02, 0x00, 0x0c, 0xd1, 0x0a, 0x6c, // ..R.....l
	}

	var b bytes.Buffer
	d := packet.MySQLPacketDecompressor{Receiver: &b}
	if _, err := d.Write(input); err != nil && err != io.EOF {
		t.Fatal(err)
	}

	if diff := cmp.Diff(b.Bytes(), expected); diff != "" {
		t.Fatalf("Decompressed version doesn't match (-got +expected):\n%s\n", diff)
	}
}
